---
import { getCollection } from "astro:content";
import Post from "@layouts/Post.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

// Get the current post's props
const post = Astro.props;

// Extract the slug from the post's props
const { slug } = post;

// Render the content of the current post
const { Content } = await post.render();

const posts = await getCollection("blog");

// Sort posts by updateDate if available, otherwise by pubDate
const sortedPosts = posts.sort((a, b) => {
  const dateA = a.data.updatedDate || a.data.pubDate;
  const dateB = b.data.updatedDate || b.data.pubDate;
  return new Date(dateB) - new Date(dateA);
});

// Find the index of the current post
const currentIndex = sortedPosts.findIndex((post) => post.slug === slug);

// Determine the next and previous posts
const prevPost = sortedPosts[currentIndex + 1];
const nextPost = sortedPosts[currentIndex - 1];
---

<Post {...post.data}>
  <Content />
  <nav class="post-navigation">
    {
      (() => {
        if (nextPost) {
          return (
            <a href={`/blog/${nextPost.slug}/`} class="next">
              Next Post
            </a>
          );
        } else {
          return <div />;
        }
      })()
    }

    {
      (() => {
        if (prevPost) {
          return (
            <a href={`/blog/${prevPost.slug}/`} class="previous">
              Previous Post
            </a>
          );
        } else {
          return <div />;
        }
      })()
    }
  </nav>
</Post>
